1
00:00:02,190 --> 00:00:03,640
Welcome back.
欢迎回来。

2
00:00:03,670 --> 00:00:09,060
In this step, let's try and add a little bit more complexity into our Functionality.
在这一步，让我们尝试在我们的功能中增加一点复杂性。

3
00:00:09,150 --> 00:00:13,150
What we'd want to do is, we would want to print squares of numbers.
我们想做的是，我们想打印正方形的数字。

4
00:00:13,620 --> 00:00:16,760
Until now, we have been printing the numbers as is.
到目前为止，我们一直在打印数字的原样。

5
00:00:16,820 --> 00:00:20,600
How about printing the squares of each of these numbers?
那么，打印每个数字的正方形呢？

6
00:00:20,900 --> 00:00:21,700
How do we do that?
我们如何做到这一点呢？

7
00:00:22,530 --> 00:00:23,700
Let's look at that.
我们来看看这个。

8
00:00:23,730 --> 00:00:31,040
So, I'll copy this method out. I'll say printSquaresofEvenNumbers.
所以，我将这个方法复制出来。我会说 printSquaresofEvenNumbers。

9
00:00:31,040 --> 00:00:34,500
So let's print squares only of the even numbers in the list.
所以我们只打印列表中偶数的方块。

10
00:00:34,670 --> 00:00:40,570
So, we have a stream, we are allowing only the even numbers to go through, and then printing them.
所以，我们有一个流，我们只允许偶数通过，然后打印它们。

11
00:00:41,000 --> 00:00:46,220
However, over here, we would want to actually print the squares of the numbers.
然而，在这里，我们想实际打印这些数字的方块。

12
00:00:46,640 --> 00:00:52,860
How do I do that? The way I can do that is by doing something called a mapping.
我如何做到这一点呢？我可以做的方法是做一个叫做映射的东西。

13
00:00:53,300 --> 00:00:57,590
So, what we'd want to do is, we would want to map each of the element, we would want to take each of the
所以，我们要做的是，我们要映射每个元素，我们要把每个元素的

14
00:00:57,590 --> 00:01:02,340
element and map it to the square of the element.
元素，并将其映射到该元素的平方。

15
00:01:02,350 --> 00:01:09,810
So, we'd want to calculate the square of the each element and then print the square of the element.
所以，我们要计算每个元素的平方，然后打印元素的平方。

16
00:01:09,830 --> 00:01:14,300
So, how do we do the mapping? The way we can do the mapping is by saying map
那么，我们如何做这个映射呢？我们做映射的方法是通过说map

17
00:01:14,630 --> 00:01:18,560
and you can define the mapper function in here,
你可以在这里定义映射函数、

18
00:01:18,560 --> 00:01:25,760
the mapper lambda expression in here. The mapper lambda expression is, take x or take any number,
mapper lambda expression在这里。mapper lambda表达式是，取x或取任何数字、

19
00:01:25,760 --> 00:01:31,590
and once you have the number, what we would want to do with the number? We would want to actually multiply
一旦你有了这个数字，我们想对这个数字做什么？我们想把它乘以

20
00:01:31,590 --> 00:01:32,840
it by itself.
它本身。

21
00:01:32,840 --> 00:01:35,510
So, number * number.
所以，数字*数字。

22
00:01:35,510 --> 00:01:42,990
So, this expression is called a mapping expression, where we are mapping a number to number into a number.
所以，这个表达式被称为映射表达式，我们将一个数字映射到一个数字中。

23
00:01:43,040 --> 00:01:48,170
The result of this is at the end of it. The number would be multiplied by itself.
这个的结果在它的最后。这个数字会被自己乘以。

24
00:01:48,170 --> 00:01:50,150
So, we'll calculate the square of the number.
所以，我们会计算出这个数字的平方。

25
00:01:50,150 --> 00:01:53,240
And after that, the square would be printed.
而后，这个平方会被打印出来。

26
00:01:53,540 --> 00:01:58,000
Let's try and run this. Oops.
让我们试着运行这个。哎呀。

27
00:01:58,030 --> 00:02:00,630
We have not changed the call in here.
我们没有改变这里的调用。

28
00:02:00,670 --> 00:02:06,070
So, we don't want to print even numbers in the list. We would want to print the squares of all numbers.
所以，我们不希望打印列表中的偶数。我们想打印所有数字的正方形。

29
00:02:06,400 --> 00:02:15,890
So, let's do this, printSquaresOfEvenNumbersInListFunctional and let's run this. Run Java application
所以，让我们这样做，printSquaresOfEvenNumbersInListFunctional，让我们运行这个。运行Java应用程序

30
00:02:15,980 --> 00:02:20,810
and you can see that squares of all the numbers are being printed out.
你可以看到所有数字的正方形都被打印出来了。

31
00:02:20,900 --> 00:02:28,130
Now, you can pause the video in here and try and do a few more things as an exercise. The two exercises
现在，你可以在这里暂停视频，试着再做一些事情作为练习。这两个练习

32
00:02:28,190 --> 00:02:30,670
are Exercise 5 and Exercise 6.
是练习5和练习6。

33
00:02:30,690 --> 00:02:38,000
Exercise 5 is to print the cubes of only the odd numbers. A cube is nothing, but a number multiplied
练习5是只打印奇数的立方体。一个立方体是什么，只是一个数字乘以

34
00:02:38,000 --> 00:02:39,710
by itself three times.
的三倍。

35
00:02:39,710 --> 00:02:47,660
So, three cube is equal to three into three into three, which is 27. Exercise 6 is to print the
所以，三个立方体等于三进三进三，也就是27。练习6是要打印

36
00:02:47,660 --> 00:02:50,890
number of characters in each course name.
每个课程名称中的字符数。

37
00:02:51,050 --> 00:02:53,000
So, I would want to print six characters.
所以，我想打印六个字符。

38
00:02:53,030 --> 00:02:54,530
Here it would be 11 characters,
这里将是11个字符、

39
00:02:54,530 --> 00:02:56,870
here it would be three. So, instead of printing the course itself,
这里是3个。所以，不要打印课程本身、

40
00:02:56,870 --> 00:03:00,190
I would want to print the number of characters in that.
我想打印其中的字符数。

41
00:03:00,240 --> 00:03:04,220
Now, you can pause the video in here and try those two things as an exercise.
现在，你可以暂停这里的视频，尝试这两件事作为练习。

42
00:03:04,910 --> 00:03:06,260
Let's go ahead and solve them.
让我们继续并解决它们。

43
00:03:06,260 --> 00:03:11,650
So, what we would want to do in the exercise is, I'm in FP01Exercises.java.
所以，我们在练习中要做的是，我在FP01Exercises.java中。

44
00:03:11,810 --> 00:03:19,920
And what we'd want to do is, printCubesOfOddNumbers. And the way I can do that is very simple, right?
我们要做的是，printCubesOfOddNumbers。我做这个的方法很简单，对吗？

45
00:03:19,950 --> 00:03:24,540
I would want to map each element, each number which is present in there.
我想映射每个元素，每个存在于其中的数字。

46
00:03:24,600 --> 00:03:26,520
What do I want to do with it?
我想对它做什么？

47
00:03:26,520 --> 00:03:31,810
I'd want to multiply by itself three times, number * number * number.
我想把它乘以三倍，数字*数字*数字。

48
00:03:31,920 --> 00:03:33,000
That's it.
就这样了。

49
00:03:34,120 --> 00:03:42,500
Let's take this and let's use the list of numbers which we have already created and call this in here by
让我们使用我们已经创建的数字列表，并在这里通过传递数字来调用它。

50
00:03:42,500 --> 00:03:43,880
passing in numbers.
传入数字。

51
00:03:47,280 --> 00:03:51,660
Let's see what would be happening. Run Java Application.
让我们看看会发生什么。运行Java应用程序。

52
00:03:51,660 --> 00:03:53,670
The code is a little messy.
这段代码有点乱。

53
00:03:53,940 --> 00:03:57,600
So you can see that only for the odd numbers, the cubes are being printed.
所以你可以看到，只有奇数的方块被打印出来了。

54
00:03:57,600 --> 00:04:02,940
Don't really worry about what's printed after this. This is a result from the courses stuff which is after
不要担心这之后打印的东西。这是课程内容的结果，在这之后

55
00:04:02,940 --> 00:04:04,290
this.
这个。

56
00:04:04,500 --> 00:04:05,130
So, that's cool.
所以，这很好。

57
00:04:05,130 --> 00:04:07,820
We are now able to do the cubes of odd numbers.
我们现在可以做奇数的立方体了。

58
00:04:07,820 --> 00:04:12,840
The next exercise was to actually print the length of these courses.
接下来的练习是实际打印这些课程的长度。

59
00:04:13,500 --> 00:04:19,050
How do we print the length of these courses? Let's look at it right now. So what do we want to do?
我们如何打印这些课程的长度？让我们现在就来看看。那么我们要怎么做呢？

60
00:04:19,050 --> 00:04:21,910
courses.stream().
courses.stream()。

61
00:04:21,990 --> 00:04:25,170
We don't really want to filter anything. For all the courses, what do we want to do?
我们并不真的想过滤什么。对于所有的课程，我们想做什么？

62
00:04:25,170 --> 00:04:30,990
We'd want to print the length. So, we can map each of the courses. So each of the course,
我们想打印长度。所以，我们可以映射每一个课程。所以，每一个课程、

63
00:04:30,990 --> 00:04:32,500
what do we want to map it to?
我们想把它映射到什么？

64
00:04:32,520 --> 00:04:37,630
We'd want to map it to course.length(). So, map
我们想把它映射到course.length()。所以，将

65
00:04:37,630 --> 00:04:46,900
course to course.length() .forEach(System.out::println). Isn't it cool?
到 course.length() .forEach(System.out::println)。这不是很酷吗？

66
00:04:47,700 --> 00:04:50,270
Let's not really worry about this.
让我们不要真的担心这个问题。

67
00:04:50,280 --> 00:04:51,780
Let's comment this out.
让我们把它注释出来。

68
00:04:53,000 --> 00:04:55,660
And let's run this code.
让我们运行这段代码。

69
00:04:59,380 --> 00:05:05,840
You can see, over here, that this is printing the lengths of each one of this. Just to be really really
你可以看到，在这里，这是在打印每个人的长度。只是为了非常非常

70
00:05:06,230 --> 00:05:06,850
clear,
清楚、

71
00:05:08,450 --> 00:05:14,150
what we'll do is, we'll append the course with the space and the course.length().
我们要做的是，在课程中加入空格和course.length()。

72
00:05:14,660 --> 00:05:17,900
So, what we are doing in here is, course + " "
所以，我们在这里所做的是，course + " "

73
00:05:17,920 --> 00:05:21,040
+ course.length. Let's run this.
+ course.length。让我们运行这个。

74
00:05:24,120 --> 00:05:27,360
You can see that it's printing Spring 6, Spring Boot 11 characters,
你可以看到，它正在打印Spring 6，Spring Boot 11个字符、

75
00:05:27,360 --> 00:05:32,050
API is 3 characters, and so on and so forth.
API是3个字符，以此类推。

76
00:05:32,280 --> 00:05:37,410
As we discussed before, it's very very important to get your hands dirty with functional programming.
正如我们之前所讨论的，在函数式编程中动手操作是非常非常重要的。

77
00:05:37,760 --> 00:05:42,150
We are used to doing the traditional approach for a number of years
我们多年来习惯于使用传统的方法

78
00:05:42,330 --> 00:05:49,140
and there is a lot of unlearning to do before we would get comfortable with functional programming.
而在我们适应函数式编程之前，有很多事情要做。

79
00:05:49,140 --> 00:05:52,810
I hope you're having a lot of fun and I'll see you in the next step. Until then,
我希望你玩得很开心，我们下一步再见。直到那时、

80
00:05:52,960 --> 00:05:53,460
bye bye.
bye bye。

